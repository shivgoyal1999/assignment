Configure kubectl

Download kubeconfig for EKS:

aws eks --region us-east-1 update-kubeconfig --name polaris-eks-cluster
kubectl get nodes


âœ… You should see worker nodes in Ready state.

 Validate Jenkins

Check pods:

kubectl get pods -n jenkins


âœ… Jenkins pod must be Running.

Get Jenkins initial admin password:

kubectl exec -it -n jenkins deploy/jenkins -- cat /var/jenkins_home/secrets/initialAdminPassword


Open Jenkins via Kong Ingress: http://jenkins.polaris.com

 Validate Kong

Get Kong proxy IP:

kubectl get svc -n kong kong-proxy


âœ… Ensure EXTERNAL-IP is available.

Test Kong Ingress controller:

curl -i http://<KONG_EXTERNAL_IP>

Deploy API via Jenkins Pipeline

Push code to GitHub repo.

Webhook triggers Jenkins pipeline.

Jenkins builds image â†’ pushes to ECR â†’ runs helm upgrade.

Validate API pod:

kubectl get pods -n default


Validate service:

kubectl get svc -n default

Access API via Kong

Since we defined:

host: api.polaris.com


Update your /etc/hosts (Linux/Mac) or C:\Windows\System32\drivers\etc\hosts (Windows):

<KONG_EXTERNAL_IP> api.polaris.com


Now test API:

curl http://api.polaris.com/health


âœ… You should get response from your deployed API.

Validate Auto Trigger

Commit a small change to API code.

Jenkins should auto-trigger via webhook.

After pipeline finishes, check pod image:

kubectl describe pod <api-pod> | grep Image


âœ… Image tag should match Jenkins build number.

ðŸ”§ Troubleshooting Quick Guide

Pods CrashLoopBackOff â†’ check logs

kubectl logs <pod> -n default


Ingress not routing â†’ verify Kong annotations, and DNS mapping in /etc/hosts.

Pipeline fails at ECR login â†’ ensure Jenkins has AWS_ACCESS_KEY_ID & AWS_SECRET_ACCESS_KEY configured.

Helm upgrade fails â†’ run with debug

helm upgrade --install polaris-api ./helm-charts/api-chart --debug
