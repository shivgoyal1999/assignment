kubectl get svc -n kong kong-proxy -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'


aws eks --region us-east-1 update-kubeconfig --name polaris-eks-cluster
kubectl get nodes


You should see worker nodes in Ready state.

 Validate Jenkins

Check pods:

kubectl get pods -n jenkins


jenkins pod must be Running.

Get Jenkins initial admin password:

kubectl exec -it -n jenkins deploy/jenkins -- cat /var/jenkins_home/secrets/initialAdminPassword


Open Jenkins via Kong Ingress: http://jenkins.polaris.com

 Validate Kong

Get Kong proxy IP:

kubectl get svc -n kong kong-proxy


Ensure EXTERNAL-IP is available.

Test Kong Ingress controller:

curl -i http://<KONG_EXTERNAL_IP>

Deploy API via Jenkins Pipeline

Push code to GitHub repo.

Webhook triggers Jenkins pipeline.

Jenkins builds image → pushes to ECR → runs helm upgrade.

Validate API pod:

kubectl get pods -n default


Validate service:

kubectl get svc -n default

Access API via Kong

Since we defined:

host: api.polaris.com


Update your /etc/hosts (Linux/Mac) or C:\Windows\System32\drivers\etc\hosts (Windows):

<KONG_EXTERNAL_IP> api.polaris.com


Now test API:

curl http://api.polaris.com/health


Validate Auto Trigger

Commit a small change to API code.

Jenkins should auto-trigger via webhook.
I configured GitHub Webhooks to trigger Jenkins automatically on code changes. 
The webhook points to Jenkins /github-webhook/, and the Jenkins pipeline is set with the GitHub SCM trigger.
So every git push triggers a pipeline run that builds the Docker image, pushes it to ECR, and redeploys via Helm.
This ensures fully automated CI/CD without manual intervention.”
After pipeline finishes, check pod image:

kubectl describe pod <api-pod> | grep Image


Image tag should match Jenkins build number.



